---
title: "Pożyczki"
author: "Aleksandra, Cezary, Karolina"
output: html_document
---

```{r, include = FALSE}
# instalacja (jeśli potrzeba) i załadowanie niezbędnych pakietów
if (!require(knitr)) install.packages("knitr")
library(knitr)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
if (!require(gridExtra)) install.packages("gridExtra")
library(gridExtra)
if (!require(psych)) install.packages("psych")
library(psych)
if (!require(ipred)) install.packages("ipred")
library(ipred)
if (!require(rpart)) install.packages("rpart")
library(rpart)
if (!require(rpart.plot)) install.packages("rpart.plot")
library(rpart.plot)

# szerokość wydruku
options(width = 150)
```

# Wstęp
## Opis problemu
Celem niniejszego opracowania jest budowa klasyfikatora, który pozwoli możliwie dokładnie przewidzieć decyzję dotyczącą przyznania pożyczki klientom pewnej firmy pożyczkowej.

## Baza danych
Podstawą analizy jest baza danych klientów firmy pożyczkowej.

```{r}
# wczytanie danych
sciezka <- "/Users/czare/Desktop/Analiza Grupa C/pozyczki.csv"
dane <- read.csv(sciezka)

# wyświetlenie pierwszych wierszy danych
kable(head(dane))
```

```{r}
# wyświetlanie danych
str(dane)
```

## Zmienne
Zmienną objaśnianą jest zmienna `Loan_Status` określająca, czy danej osobie przyznano pożyczkę (Y/N).

Zmienne objaśniające to głównie zmienne socjo-demograficzne oraz informacje finansowe.

```{r}
# nazwy zmiennych objaśniających
data.frame(zmienna = names(dane)[2:12])
```

## Czyszczenie dancyh 

Pierwsza kolumna w bazie danych (`Loan_ID`) określa numer identyfikacyjny, ją możemy pominąć.

```{r}
# usunięcie pierwszej kolumny
dane <- dane %>%
  select(-1)
```

Mamy 614 obserwacji (klientów firmy) opisanych przez 12 zmiennych.

## Dodanie kolumny pomocniczej 

Dodanie kolumny Total income, która pokazuję dochód dwoch osób składających wniosek. Total income by one, pokazuję dochód całkowity dochód przeliczając na jedną osobę.

```{r}
dane <- dane %>%
  mutate(Total_income = (ApplicantIncome + CoapplicantIncome))
dane <- dane %>%
  mutate(Total_income_by_one = (ApplicantIncome + CoapplicantIncome)/2)
```


# Wizaulizacja danych

## Decyzja pożyczkowa
Zmienna `Loan_Status` to zmienna jakościowa wyrażona na skali nominalnej.

```{r}
# wykres słupkowy dla zmiennej Loan_Status
tab <- as.data.frame(100*prop.table(table(dane$Loan_Status)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 5, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Decyzja pożyczkowa",
       y = "%")
```


## Płeć

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Gender)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Płeć",
       y = "%")
```
```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Gender)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Płeć",
       y = "%")
```

## Małżeństwo

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Married)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Małżeństwo",
       y = "%")
```
```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Married)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Małżeństwo",
       y = "%")
```




## Osoby na utrzymaniu

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Dependents)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 3, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Oosby na utrzymaniu",
       y = "%")
```

```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Dependents)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 3, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Oosby na utrzymaniu",
       y = "%")
```

## Edukacja

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Education)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Edukacja",
       y = "%")
```
```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Education)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Edukacja",
       y = "%")
```

## Samozatrudnienie

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Self_Employed)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Samozatrudnienie",
       y = "%")
```


```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Self_Employed)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq, 1), "%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Samozatrudnienie (Loan Status: Y)",
       y = "%")

```

## Historia kredytowa

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Historia kredytowa",
       y = "%")
```

```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Credit_History)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Historia kredytowa",
       y = "%")
```


## Lokalizacja 

```{r}
tab <- as.data.frame(100*prop.table(table(dane$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Lokalizacja",
       y = "%")
```

```{r}
filtered_data <- dane[dane$Loan_Status == "Y", ]

tab <- as.data.frame(100*prop.table(table(filtered_data$Property_Area)))
ggplot(tab, aes(x = Var1, y = Freq)) + 
  geom_col(fill = "#FFFF99", colour = "black") +
  geom_text(aes(label = paste0(round(Freq,1),"%")), 
            stat = "identity", size = 4, 
            fontface = "bold", position = position_stack(vjust = 0.5)) +
  theme(axis.title.x = element_blank(), 
        axis.text.x = element_text(colour = "black", size = 10),
        plot.title = element_text(hjust = 0.5, size = 12)) +
  labs(title = "Lokalizacja",
       y = "%")
```

## Statystyki opisowe zminnych ilościowych
```{r}
kable(describe(dane[,6:9])[c(2:5,8,9,11,12)])
```
## Dochód aplikanta

```{r, warning = FALSE}
ggplot(dane, aes(x = ApplicantIncome)) + 
  geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
  labs(title = "Dochód aplikanta", 
       x = "dollars", y = "n") +
  theme(plot.title = element_text(hjust = 0.5, size = 12))

```
## Dochód współaplikanta
```{r, warning = FALSE}
ggplot(dane, aes(x = CoapplicantIncome)) + 
  geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
  labs(title = "Dochód współaplikanta", 
       x = "dollars", y = "n") +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```
## Wartość pożyczki
```{r, warning = FALSE}
ggplot(dane, aes(x = LoanAmount)) + 
  geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
  labs(title = "Wartość pożyczki", 
       x = "dollars", y = "n") +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```
## Okres pożyczkowania
```{r, warning = FALSE}
ggplot(dane, aes(x = Loan_Amount_Term)) + 
  geom_histogram(colour = "black", fill = "#FFFF99", bins = 10) +
  labs(title = "Okres pożyczkowania", 
       x = "months", y = "n") +
  theme(plot.title = element_text(hjust = 0.5, size = 12))
```
## Wielkość pożyczki osób wykształconych ze względu na lokalizację
```{r, warning = FALSE}
ggplot(dane, aes(x = Education, y = LoanAmount, fill = Property_Area)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Wielkość pożyczki osób wykształconych ze względu na lokalizację",
       x = "Edukacja",
       y = "Wartość pożyczki",
       fill = "Lokalizacja") +
  theme_minimal()
```

## Wykres liniowy wartości pożyczki
```{r, warning = FALSE}
dane <- dane %>% arrange(LoanAmount)

ggplot(dane, aes(x = seq_along(LoanAmount), y = LoanAmount)) +
  geom_line(color = "blue") +
  labs(title = "Wykres liniowy wartości pożyczki", x = "Numer obserwacji", y = "Warrtość pożyczki")
```

## Wykres rozrzutu długości i wartości pożyczki
```{r, warning = FALSE}
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term)) +
  geom_point(color = "green") +
  labs(title = "Wykres rozrzutu Loan Amount i Loan Terms", x = "Loan Amount", y = "Loan Terms")
```
## 

```{r, warning = FALSE}

# Narysuj dwa wykresy rozrzutu, kategoryzowane przez LoanStatus
ggplot(dane, aes(x = LoanAmount, y = Loan_Amount_Term, )) +
  geom_point() +
  facet_wrap(~Loan_Status, scales = "free") +
  labs(title = "Wykresy rozrzutu wartości i okresu trwania pożyczki z podziałem na deycję pożyczkową", x = "Wartość pożyczki", y = "Okres pożyczkowania")

```



